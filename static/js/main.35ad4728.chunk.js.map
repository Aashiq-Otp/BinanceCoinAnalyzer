{"version":3,"sources":["components/Header.js","components/footer.js","context/context.js","components/menu.js","components/Box.js","components/coinlist.js","components/topsuggestion.js","components/displayBox.js","components/Singlebox.js","components/topVolumeOverview.js","components/TopVolume.js","components/priceaction.js","components/content.js","components/main.js","serviceWorker.js","index.js"],"names":["Header","props","className","Footer","githubicon","icon","faGithub","emailicon","faEnvelope","TelegramIcon","faTelegram","style","href","contextData","React","createContext","ContextProvider","setMenu","val","setState","menu","setCoin","e","coin","state","Provider","value","this","children","Component","Menu","useContext","Nav","fill","variant","defaultActiveKey","Item","Link","eventKey","onClick","Box","vchange","vcp","coinList","TopSuggestions","useEffect","forEach","index","toLowerCase","ws","WebSocket","onopen","send","JSON","stringify","onmessage","evnt","console","log","parse","data","s","p","DisplayBox","pricechange","setPChangeClass","volumechange","setVChangeClass","vchangepercent","setVPChangeClass","useState","pchangeClass","vchangeClass","vpchangeClass","cprice","currentvolume","Singlebox","topdata","map","i","c","key","TopVolumeOverview","timeframe","setTimeframe","setTopData","getData","finalData","endTime","startTime","Date","now","parseInt","topcoin","topVolumeChange","topVolumeChangePercent","avgWaitPrice","totalVolumeBefore","currentQuoteVolume","vchangep","fetch","type","then","resp","json","length","weightedAvgPrice","quoteVolume","toFixed","push","result","parseFloat","sort","a","b","slice","onChange","target","name","selected","VolumeAnalyzerTop","setTimeFrame","volumeChange","setVolumeChange","currentVolume","setCurrentVolume","currentPrice","setCurrentPrice","priceChange","setPriceChange","volumeChangePercentage","setVolumeChangePercenatge","api","lastPrice","priceChangePercent","error","placeholder","toUpperCase","maxLength","Number","PriceActions","totalbuy","setTotalbuy","totalsell","setTotalsell","buys","setBuys","sells","setSells","counts","setCounts","st","setST","et","setET","avgTradesS","setAvgTrades","recentAvgTrades","setRecentAvgTrades","sell","buy","count","Ltotalsell","Ltotalbuy","time","quoteQty","isBuyerMaker","len","toLocaleString","hour","minute","hour12","recentStartTime","recentEndTime","tradeCount","totalTrades","recentTotalTrades","avgTrades","Math","ceil","Contents","Main","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.35ad4728.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../styles/style.css'\r\nfunction Header(props) {\r\n    return (\r\n       <> <div>\r\n            <div className=\"navigation\">\r\n                <div className=\"nav-links\">\r\n                    <div className=\"brand\">Binance Coin Analyzer V.1</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"text-success mt-3 mb-3 font-weight-bold text-center\">\r\n                    Smart Suggestion For Smart Trades !\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faGithub , faTelegram} from '@fortawesome/free-brands-svg-icons';\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nfunction Footer(props) {\r\n \r\n    const githubicon = <FontAwesomeIcon icon={faGithub} />\r\n    const emailicon = <FontAwesomeIcon icon ={faEnvelope}/>\r\n    const TelegramIcon = <FontAwesomeIcon icon={faTelegram}/>\r\n    return (\r\n\r\n            <div className=\"row d-flex justify-content-center align-content-center\" \r\n            style={{'width':'100%','minHeight':'80px', 'backgroundImage':' linear-gradient(to left,#9f24af,rgba(36, 103, 230, 0.856))'}}>\r\n                <div className=\"col text-white text-center font-weight-bolder \">\r\n    <a className=\"mr-2 text-white\" href=\"https://github.com/Aashiq-Otp\"> {githubicon} </a>  \r\n    <a className=\"ml-1 mr-2 text-white\" href=\"mailto:Aashiqotp.as@gmail.com\">{emailicon}</a>\r\n    <a className=\"ml-2 text-white\" href=\"https://t.me/AashiqOtp\">{TelegramIcon}</a> <br/>\r\n                            &copy; Binance Coin Analyzer V.1 <br/>\r\n                            2020\r\n\r\n                </div>\r\n            </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nexport const contextData = React.createContext();\r\n\r\nclass ContextProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n        menu:'volumeanalyzer',\r\n        coin:'ETHBTC' }\r\n    }\r\n\r\nsetMenu = (val) =>{\r\n    this.setState({menu:val})    \r\n}\r\nsetCoin = (e) =>{this.setState({coin: e})}\r\n    render() { \r\n        return (  \r\n           \r\n            <contextData.Provider value={{...this.state,setMenu:this.setMenu,setCoin:this.setCoin}}>\r\n                {this.props.children}\r\n            </contextData.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ContextProvider;","import React, { useContext } from 'react';\r\nimport {Nav} from 'react-bootstrap';\r\nimport { contextData } from '../context/context';\r\nfunction Menu(props) {\r\n  const {setMenu} = useContext(contextData);\r\n\r\n    return (\r\n        <div>\r\n            <Nav fill variant=\"tabs\" defaultActiveKey=\"/\">\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-1\" style={{\"color\":\"#f20c1b\",\"fontWeight\":\"bold\"}}  onClick={ (e)=>{setMenu(\"volumeanalyzer\")}}>Volume Analyzer</Nav.Link>\r\n  </Nav.Item>\r\n  <Nav.Item>\r\n    <Nav.Link eventKey=\"link-2\" style={{\"color\":\"#f20c1b\",\"fontWeight\":\"bold\"}} onClick={ (e)=>{setMenu(\"priceaction\")}}>Price Action</Nav.Link>\r\n  </Nav.Item>\r\n</Nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport '../styles/style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nfunction Box(props) {\r\n \r\n    return (\r\n        \r\n        \r\n        <div className=\"col-md-3 col-sm-6 d-flex  justify-content-center\">\r\n        <div className=\"box-block\">\r\n        <div className=\"block\">\r\n            <div className=\"title\">\r\n               {props.coin}\r\n            </div>\r\n    <div>Volume Increased : {props.vchange}</div>\r\n    <div>+ {props.vcp} %</div>\r\n    \r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n    \r\n\r\n    \r\n    \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Box;","const coinList = [\"ETHBTC\",\"ADABTC\",\"ONGBTC\",\"LINKBTC\",\"XRPBTC\",\"ZECBTC\",\"ZILBTC\",\"BATBTC\",\r\n\"ANKRBTC\",\"XMRBTC\",\"EOSBTC\",\"KNCBTC\",\"MATICBTC\",\"BCDBTC\",\"ONTBTC\",\"EDOBTC\",\"ATOMBTC\",\"LTCBTC\",\"XTZBTC\",\"TRXBTC\",\r\n\"KAVABTC\",\"ERDBTC\",\"OGNBTC\",\"XVGBTC\",\"DGBBTC\",\"XLMBTC\",\"OAXBTC\",\"RENBTC\",\"BNTBTC\",\"IOSTBTC\",\"SOLBTC\",\"CHRBTC\",\"VETBTC\",\r\n\"ETCBTC\",\"ZRXBTC\",\"THETABTC\",\"DASHBTC\",\"LENDBTC\",\"RVNBTC\",\"LTOBTC\",\"HBARBTC\",\"ENJBTC\",\"OMGBTC\",\"GASBTC\",\"NEOBTC\",\r\n\"NULSBTC\",\"MCOBTC\",\"ALGOBTC\",\"QKCBTC\",\"SCBTC\",\"RLCBTC\",\"REPBTC\",\"CELRBTC\",\"WRXBTC\",\"NASBTC\",\"ONEBTC\",\"CTSIBTC\",\r\n\"TOMOBTC\",\"QTUMBTC\",\"DREPBTC\",\"COTIBTC\",\"IOTABTC\",\"REQBTC\",\"TNBBTC\",\"POEBTC\",\"BEAMBTC\",\"ADXBTC\",\"AMBBTC\",\"LRCBTC\",\r\n\"HIVEBTC\",\"TROYBTC\",\"IRISBTC\",\"AIONBTC\",\"IOTXBTC\",\"POWRBTC\",\"TFUELBTC\",\"GOBTC\",\"NKNBTC\",\"STEEMBTC\",\"CTXCBTC\",\"QLCBTC\",\r\n\"CHZBTC\",\"GVTBTC\",\"STMXBTC\",\"BANDBTC\",\"FUNBTC\",\"SKYBTC\",\"LOOMBTC\",\"CMTBTC\",\"ICXBTC\",\"POLYBTC\",\r\n\"FTMBTC\",\"NANOBTC\",\"ARKBTC\",\"BTSBTC\",\"BLZBTC\",\"ASTBTC\",\"ENGBTC\",\"MDTBTC\",\"PHBBTC\",\"DATABTC\",\"MANABTC\",\"WABIBTC\",\r\n\"VIBBTC\",\"APPCBTC\",\"BQXBTC\",\"WTCBTC\",\"BRDBTC\",\"NEBLBTC\",\"PERLBTC\",\"WAVESBTC\",\"MDABTC\",\"FETBTC\",\"ZENBTC\",\"WANBTC\",\r\n\"PPTBTC\",\"STORJBTC\",\"DOGEBTC\",\"RDNBTC\",\"XZCBTC\",\"MTLBTC\",\"MBLBTC\",\"VIABTC\",\"AEBTC\",\"NAVBTC\",\"XEMBTC\",\r\n\"CVCBTC\",\"AGIBTC\",\"STRATBTC\",\"STXBTC\",\"COSBTC\",\"EVXBTC\",\"GNTBTC\",\"LSKBTC\",\"ELFBTC\",\"KMDBTC\",\"DCRBTC\",\"VIBEBTC\",\r\n\"CDTBTC\",\"HOTBTC\",\"GRSBTC\",\"SNTBTC\",\"TNTBTC\",\"POABTC\",\"DUSKBTC\",\"RCNBTC\",\"GXSBTC\",\"DLTBTC\",\"SNGLSBTC\",\"QSPBTC\",\r\n\"DNTBTC\",\"SYSBTC\",\"OSTBTC\",\"PIVXBTC\",\"ARPABTC\",\"SNMBTC\",\"WPRBTC\",\"BCPTBTC\",\"MITHBTC\",\"HCBTC\"];\r\n\r\nexport default coinList;","import React, { useEffect } from 'react';\r\nimport Box from './Box';\r\nimport coinList from './coinlist';\r\n\r\n\r\nfunction TopSuggestions(props) {\r\n    \r\n    useEffect(()=>{\r\n\r\n      coinList.forEach((coin,index)=>{\r\n          coin = coin.toLowerCase();\r\n        const ws = new WebSocket(`wss://stream.binance.com:9443/ws/${coin}@trade`);\r\n        ws.onopen=()=>{\r\n            ws.send((JSON.stringify({\r\n                \"method\":\"SUBSCRIBE\",\r\n                \"params\": [\r\n                    `${coin}@trade`\r\n                  ],\r\n                \"id\":index\r\n\r\n            })))\r\n        }\r\n           ws.onmessage=(evnt)=>{\r\n                    console.log((JSON.parse(evnt.data).s),(JSON.parse(evnt.data).p))\r\n             }\r\n      })  \r\n    },[])\r\n    return (\r\n        <div>\r\n          <Box></Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopSuggestions;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction DisplayBox(props) {\r\n    \r\n    useEffect(()=>{\r\n   \r\n        if(props.pricechange<0){\r\n            setPChangeClass(\"col mt-1  text-danger font-weight-bold\")\r\n        }\r\n        else{\r\n            setPChangeClass(\"text-success\");\r\n        }\r\n        if(props.volumechange<0){\r\n            setVChangeClass(\" text-center text-danger font-weight-bold\");\r\n        }\r\n        else{\r\n            setVChangeClass(\"text-center text-success font-weight-bold\");\r\n        }\r\n        if(props.vchangepercent<0){\r\n            setVPChangeClass(\"text-center text-danger font-weight-bold\")\r\n        }\r\n        else{\r\n            setVPChangeClass(\"text-center text-success font-weight-bold\")\r\n        }\r\n    },[props.pricechange,props.vchangepercent,props.volumechange])\r\n    const [pchangeClass,setPChangeClass]=useState(\"text-success\");\r\n    const [vchangeClass,setVChangeClass] =useState(\" text-center text-success font-weight-bold\");\r\n    const [vpchangeClass,setVPChangeClass]=useState(\" text-center text-success font-weight-bold\");\r\n    return (\r\n        <>\r\n        <div className=\"row box-border d-flex text-center justify-content-center  align-items-center\">\r\n            \r\n                      <div className=\" col text-info font-weight-bolder m-2 coin\">  {props.coin} </div>\r\n                      <div className=\"col font-weight-bold \"> P:<span> {props.cprice} </span></div>\r\n                    <div className=\"col  font-weight-bold\"> 24H C:<span className={pchangeClass}> {props.pricechange}%</span></div>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-3 col-sm-12 m-2 text-center borderBottom\">\r\n                  <div className=\"block-title font-weight-bold mb-1\">Volume Change</div>\r\n                        <div className={vchangeClass}>{props.volumechange} BTC</div>\r\n            </div>\r\n            <div className=\"col-md-3 col-sm-12 m-2 text-center borderBottom\">\r\n                  <div className=\"block-title font-weight-bold mb-1\">Volume Change Percentage</div>\r\n                        <div className={vpchangeClass}>{props.vchangepercent} %</div>\r\n            </div>\r\n            <div className=\"col-md-3 col-sm-12 m-2 text-center borderBottom\">\r\n                  <div className=\"block-title font-weight-bold mb-1\">Current Volume</div>\r\n                        <div className=\"text-dark text-center font-weight-bold\">{props.currentvolume} BTC</div>\r\n            </div>\r\n            </div>\r\n      \r\n        </>\r\n    );\r\n}\r\n\r\nexport default DisplayBox;","import React from 'react';\r\nimport Box from './Box';\r\n\r\nfunction Singlebox(props) {\r\n    return (\r\n        props.topdata.map((data,i)=>{\r\n            return <Box coin={data.c} vchange={data.vchange} vcp={data.vcp} key={i} />\r\n        })\r\n    );\r\n}\r\n\r\nexport default Singlebox;","import React, { useEffect, useState } from 'react';\r\nimport coinList from './coinlist'\r\nimport Singlebox from './Singlebox';\r\nfunction TopVolumeOverview(props) {\r\n    const [timeframe,setTimeframe] = useState('30m');\r\n const [topdata,setTopData]=useState([]);\r\n    useEffect(()=>{\r\n        \r\n      getData();\r\n          // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[timeframe])\r\n   let finalData =[];\r\n    const getData= ()=>{\r\n        let endTime,startTime=0;\r\n       if(timeframe==='15m' || timeframe==='30m'){\r\n         endTime = Date.now()-parseInt(timeframe)*60*1000;\r\n            startTime = endTime - 24*60*60*1000 ;\r\n       } \r\n       else{\r\n            endTime = Date.now()-parseInt(timeframe)*60*60*1000;\r\n            startTime = endTime - 24*60*60*1000;\r\n       }\r\n       \r\n        var topcoin=[];\r\n        var topVolumeChange=[];\r\n       var topVolumeChangePercent=[];\r\n    \r\n    \r\n       coinList.forEach((coin,index)=>{\r\n        var avgWaitPrice=0;\r\n        var totalVolumeBefore=0;\r\n        var currentQuoteVolume=0;\r\n        var vchange=0;\r\n        var vchangep=0;\r\n \r\n\r\n        fetch(`https://api.binance.com/api/v3/klines?symbol=${coin}&interval=5m&startTime=${startTime}&endTime=${endTime}`,{\r\n            type:'cors',\r\n        })\r\n        .then((resp)=>resp.json())\r\n        .then((data)=>  \r\n        {\r\n            for(var i=0;i<data.length;i++){\r\n                \r\n                 totalVolumeBefore = totalVolumeBefore + ( parseInt(data[i][5]))\r\n             \r\n            }\r\n                })\r\n                .then(()=>{\r\n                    \r\n                   fetch(`https://api.binance.com/api/v3/ticker/24hr?symbol=${coin}`,\r\n                    {\r\n                        type:'cors',\r\n                    })\r\n                    .then((resp=>resp.json())\r\n                    ).then(data=>{\r\n                        \r\n                        avgWaitPrice=(data.weightedAvgPrice);\r\n                        currentQuoteVolume=data.quoteVolume;\r\n                       \r\n                    })\r\n                    \r\n                    .then(()=>{\r\n                   \r\n                      vchange=((currentQuoteVolume-(totalVolumeBefore*avgWaitPrice)).toFixed(2));\r\n                     currentQuoteVolume=(parseInt(currentQuoteVolume).toFixed(2));\r\n                      vchangep=(((currentQuoteVolume-(totalVolumeBefore*avgWaitPrice))/(totalVolumeBefore*avgWaitPrice)*100).toFixed(2));\r\n                   \r\n                    }).then(()=>{\r\n                        \r\n                        if(vchange>10){\r\n                            topcoin.push(coin);\r\n                            topVolumeChange.push(vchange);\r\n                            topVolumeChangePercent.push(vchangep);\r\n                        }\r\n                    }).then(()=>{\r\n                        \r\n                        var result = [];\r\n                        topcoin.forEach((key, i) =>\r\n                         {\r\n                            result.push(\r\n                                {\"c\" : key, \"vchange\" : parseFloat(topVolumeChange[i]) , \"vcp\":topVolumeChangePercent[i] }\r\n                            )\r\n                        });\r\n                       finalData = result.sort((a,b) =>\r\n                        (a.vchange < b.vchange) ? 1 : ((b.vchange < a.vchange) ? -1 : 0)).slice(0,12);\r\n                        \r\n                    }).then(()=>{\r\n                        setTopData(finalData);\r\n                     \r\n                    })\r\n                   \r\n                  })\r\n       \r\n                       });   \r\n                    \r\n                \r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"row\">\r\n        <div className=\"col m-2 d-flex justify-content-center\">\r\n            <div className=\"section-title\">\r\n              Top  Volume Changes\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"row text-center\">\r\n        <div className=\"col d-flex justify-content-center \">\r\n            In  <select className=\"ml-2\" onChange={e=>{setTimeframe(e.target.value)}}name=\"timeframe\">\r\n                            <option value=\"15m\">15 Min</option>\r\n                            <option value=\"30m\" selected>30 Min</option>\r\n                            <option value=\"1h\">1h</option>\r\n                            <option value=\"2h\">2h</option>\r\n                            <option value=\"4h\">4h</option>\r\n                        </select>\r\n        </div>\r\n    </div>\r\n        <div className=\"row\">\r\n            <Singlebox topdata={topdata}/>\r\n        </div>\r\n        </>\r\n       \r\n    );\r\n}\r\n\r\nexport default TopVolumeOverview;\r\n\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport '../styles/style.css';\r\nimport { contextData } from '../context/context';\r\n\r\nimport DisplayBox from './displayBox';\r\nimport TopVolumeOverview from './topVolumeOverview';\r\nfunction VolumeAnalyzerTop(props) {\r\nconst {coin,setCoin} = useContext(contextData);\r\nconst [timeframe,setTimeFrame] = useState('1h');\r\nconst [volumeChange,setVolumeChange] = useState();\r\nconst [currentVolume,setCurrentVolume] = useState();\r\nconst [currentPrice,setCurrentPrice] = useState();\r\nconst [priceChange,setPriceChange] = useState();\r\nconst [volumeChangePercentage,setVolumeChangePercenatge] = useState();\r\n\r\n    useEffect(()=>{\r\n       \r\n            try {\r\n        var avgWaitPrice=0;\r\n        var totalVolumeBefore=0;\r\n        var currentQuoteVolume=0;\r\n        const endTime = Date.now()-parseInt(timeframe)*60*60*1000;\r\n        const startTime = endTime - 24*60*60*1000;\r\n        const api = `https://api.binance.com/api/v3/klines?symbol=${coin}&interval=30m&startTime=${startTime}&endTime=${endTime}`;\r\n        fetch(api,{\r\n            type:'cors',\r\n        })\r\n        .then((resp)=>resp.json())\r\n        .then((data)=>  \r\n        {\r\n            for(var i=0;i<data.length;i++){\r\n                \r\n                 totalVolumeBefore = totalVolumeBefore + ( parseInt(data[i][5]))\r\n            }\r\n                })\r\n                .then(()=>{\r\n                    fetch(`https://api.binance.com/api/v3/ticker/24hr?symbol=${coin}`,\r\n                    {\r\n                        type:'cors',\r\n                    })\r\n                    .then((resp=>resp.json())\r\n                    ).then(data=>{\r\n                        \r\n                        avgWaitPrice=(data.weightedAvgPrice);\r\n                        currentQuoteVolume=data.quoteVolume;\r\n                       setCurrentPrice(data.lastPrice);\r\n                       setPriceChange(data.priceChangePercent);\r\n                    }).then(()=>{\r\n                        \r\n                      setVolumeChange((currentQuoteVolume-(totalVolumeBefore*avgWaitPrice)).toFixed(2));\r\n                      setCurrentVolume(parseInt(currentQuoteVolume).toFixed(2));\r\n                      setVolumeChangePercenatge(((currentQuoteVolume-(totalVolumeBefore*avgWaitPrice))/(totalVolumeBefore*avgWaitPrice)*100).toFixed(2))\r\n                    })\r\n                });\r\n            }\r\n             catch (error) {\r\n                console.log(\"No Coin Found !\")\r\n            }\r\n       \r\n        },[coin,timeframe])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col m-2 d-flex justify-content-center\">\r\n                        <div className=\"section-title\">\r\n                           Volume Analyzer\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row text-center mt-2 mb-2\">\r\n                    <div className=\"col-md-6 col-sm-12\">\r\n                        <input placeholder=\"Coin Name | Eg : ETH\" onChange={e=>{setCoin((e.target.value).toUpperCase() + 'BTC')}} type=\"text\" maxLength=\"5\" ></input>\r\n                    </div>\r\n                    <div className=\"col-md-6 cl-sm-12\">\r\n                        TimeFrame : <select onChange={e=>{setTimeFrame(e.target.value)}}name=\"timeframe\">\r\n                            <option value=\"1h\">1h</option>\r\n                            <option value=\"2h\">2h</option>\r\n                            <option value=\"4h\">4h</option>\r\n                            \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n               \r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                 \r\n \r\n            <DisplayBox coin={coin} cprice={currentPrice} pricechange={priceChange} volumechange={volumeChange} vchangepercent={Number(volumeChangePercentage)} currentvolume={currentVolume}/>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TopVolumeOverview/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VolumeAnalyzerTop;","import React, { useEffect, useContext, useState } from 'react';\r\nimport { contextData } from '../context/context';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction PriceActions(props) {\r\n    const {coin,setCoin} = useContext(contextData);\r\n    const [totalbuy,setTotalbuy] = useState();\r\n    const [totalsell,setTotalsell] = useState();\r\n    const [buys,setBuys] = useState();\r\n    const [sells,setSells] = useState();\r\n    const [counts,setCounts] = useState();\r\n   const [st,setST] = useState();\r\n   const [et,setET] = useState();\r\n   const [avgTradesS,setAvgTrades] =useState();\r\n   const [recentAvgTrades,setRecentAvgTrades] = useState();\r\n\r\n\r\n\r\n\r\n   // const question_icon = <FontAwesomeIcon icon={faQuestionCircle} />\r\n    useEffect(()=>{\r\n            \r\n     /*     const ws = new WebSocket(`wss://stream.binance.com:9443/ws/mblbtc@trade`);\r\n            ws.onopen=()=>{\r\n                ws.send((JSON.stringify({\r\n                    \"method\":\"SUBSCRIBE\",\r\n                    \"params\": [\r\n                       \"mblbtc@trade\"\r\n                      ],\r\n                    \"id\":100\r\n    \r\n                }))) // m : true = sell\r\n            }\r\n      \r\n           ws.onmessage=(evnt)=>{\r\n                console.log((evnt.data))\r\n                 }         */\r\n                \r\n                 const api = `https://api.binance.com/api/v3/trades?symbol=${coin}`;\r\n                 var sell=0;\r\n                 var buy =0;\r\n                 var count=0;\r\n                 var Ltotalsell=0;\r\n                 var Ltotalbuy=0;\r\n                 var time=[];\r\n                 fetch(api,\r\n                    {type:'cors'\r\n                    }).then((resp)=>resp.json())\r\n                    .then((data)=> {\r\n                        for(var i=0; i< data.length ; i++){\r\n                            if(data[i].quoteQty > .5)\r\n                            {\r\n                               count++;\r\n                               time.push(data[i].time);\r\n                               if(data[i].isBuyerMaker){\r\n                                    sell++;\r\n                                    Ltotalsell=parseFloat(Ltotalsell+parseFloat(data[i].quoteQty));\r\n                               }\r\n                               else{\r\n                                   buy++;\r\n                                   Ltotalbuy=(Ltotalbuy+parseFloat(data[i].quoteQty));\r\n                               }\r\n\r\n                            }\r\n                        }\r\n                        if(count>0)\r\n                        {\r\n                        time.sort();\r\n                        var len = (time.length);\r\n                        setST((new Date(time[0]).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })));\r\n                        \r\n\r\n                        setET((new Date(time[len-1]).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })));\r\n                     \r\n                     }\r\n                        setCounts(count);\r\n                        setBuys(buy);\r\n                        setSells(sell);\r\n                        setTotalbuy((Ltotalbuy).toFixed(3));\r\n                        setTotalsell((Ltotalsell).toFixed(3));\r\n                        \r\n                        \r\n                    });\r\n                    //const endTime = Date.now()-parseInt(timeframe)*60*60*1000;\r\n        const startTime = Date.now() - 24*60*60*1000;\r\n        const endTime = Date.now() - 30*60*1000;\r\n       const recentStartTime = Date.now() - 30*60*1000;\r\n       const recentEndTime = Date.now() - 15*60*1000;\r\n       var tradeCount=0;\r\n       var totalTrades=0;\r\n       var recentTotalTrades=0;\r\n       var avgTrades=0;\r\n\r\n        fetch(`https://api.binance.com/api/v3/klines?symbol=${coin}&interval=15m&startTime=${startTime}&endTime=${endTime}`,{\r\n            type:'cors',\r\n        }).then((resp)=>resp.json()\r\n        .then((data)=>{\r\n            for(var i=0;i<data.length;i++)\r\n            {\r\n            totalTrades=totalTrades+data[i][8];\r\n            tradeCount++;\r\n            }\r\n        })).then(()=>{ \r\n            fetch(`https://api.binance.com/api/v3/klines?symbol=${coin}&interval=5m&startTime=${recentStartTime}&endTime=${recentEndTime}`,{\r\n            type:'cors',\r\n        }).then((resp)=>resp.json()\r\n        .then((data)=>{\r\n            for(var i=0;i<data.length;i++)\r\n            {\r\n            recentTotalTrades=recentTotalTrades+data[i][8];\r\n\r\n            }\r\n        })).then(()=>{\r\n            avgTrades = (Math.ceil(totalTrades/tradeCount));\r\n            setAvgTrades(avgTrades);\r\n            setRecentAvgTrades(recentTotalTrades);\r\n        \r\n           \r\n        })\r\n\r\n      \r\n    })\r\n    \r\n    },[coin])\r\n    return (\r\n        <div>\r\n          <div className=\"row\">\r\n        <div className=\"col m-2 d-flex justify-content-center\">\r\n            <div className=\"section-title\">\r\n              Price Action Movements\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div className=\"row d-flex justify-content-center mt-2 mb-2\">\r\n                    <div className=\"col-md-6 col-sm-12 text-center\">\r\n                      <input placeholder=\"Coin Name\"  onChange={e=>{setCoin((e.target.value).toUpperCase() + 'BTC')}} type=\"text\" maxLength=\"5\" ></input>\r\n                    </div>\r\n              \r\n                </div>\r\n               \r\n\r\n            <div className=\"row d-flex justify-content-center align-items-center\">\r\n                <div className=\"col-md-4 col-sm-12 text-center\">\r\n                       <div className=\"coin text-danger font-weight-bolder\"> {coin}</div>\r\n                        <div className=\"row\">\r\n    <div className=\"col text-dark\"> Total <span className=\"font-weight-bold\">{counts}</span> Trades Detected</div>\r\n                        </div>\r\n                </div>\r\n    <div className=\"col-md-3 col-sm-12 text-center text-dark font-weight-bold m-2\">\r\n         <span className=\"text-success\">{buys} Buys </span> Worth <span className=\"text-success\">{totalbuy}</span> BTC</div>\r\n    <div className=\"col-md-3 col-sm-12 text-center text-dark font-weight-bold m-2\">\r\n         <span className=\"text-danger\">{sells} Sells </span> Worth <span className=\"text-danger\">{totalsell} </span> BTC  </div>      \r\n            </div>\r\n    <div className=\"row text-center m-3\">\r\n        <div className=\"col-12 text-center text-secondary\">\r\n        These Trades Has Been Happened Between <span className=\"text-dark font-weight-bold\">{st} </span>  and  <span className=\"text-dark font-weight-bold\">{et} </span>\r\n    </div>\r\n    </div>\r\n        <div className=\"row d-flex justify-content-around m-3\">\r\n            <div className=\"col text-center d-flex justify-content-around\">\r\n                <div className=\"trade-box\">\r\n                <div className=\"text-info font-weight-bold\">Avg Trades / 15 Min</div>\r\n            <div className=\"text-dark font-weight-bolder\">{avgTradesS}</div>\r\n            </div>\r\n            </div>\r\n            <div className=\"col text-center d-flex justify-content-around\">\r\n            <div className=\"trade-box align-items-center\">\r\n                <div className=\"text-info font-weight-bold\">Last 15 Min Trades</div>\r\n            <div className=\"text-dark font-weight-bolder\">{recentAvgTrades}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PriceActions;","import React, { useContext } from 'react';\r\nimport { contextData } from '../context/context';\r\nimport TopSuggestions from './topsuggestion';\r\nimport VolumeAnalyzerTop from './TopVolume';\r\nimport PriceActions from './priceaction';\r\n\r\nfunction Contents(props) {\r\n    const {menu} = useContext(contextData);\r\n    \r\n    return (\r\n        <div>\r\n            {(menu==='topsuggestion') && <TopSuggestions/>}\r\n            {(menu==='volumeanalyzer') && <VolumeAnalyzerTop/>}\r\n            {(menu==='priceaction') && <PriceActions/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contents;","import React  from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles/style.css'\r\nimport Header from './Header';\r\nimport Footer from './footer';\r\nimport Menu from './menu';\r\nimport ContextProvider from '../context/context';\r\nimport Contents from './content';\r\n\r\n\r\nfunction Main(props) {\r\n \r\n    return (\r\n        <ContextProvider>\r\n        \r\n          <Header/>\r\n           <Menu/>\r\n           <Contents/>\r\n           <Footer/>\r\n        \r\n        </ContextProvider>\r\n \r\n    );\r\n}\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './components/main';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}